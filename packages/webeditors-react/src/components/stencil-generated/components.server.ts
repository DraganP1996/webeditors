/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';
import { EditorFooter as EditorFooterElement, defineCustomElement as defineEditorFooter } from "webeditors-vanilla/dist/components/editor-footer.js";
import { EditorPanel as EditorPanelElement, defineCustomElement as defineEditorPanel } from "webeditors-vanilla/dist/components/editor-panel.js";
import { JsonEditor as JsonEditorElement, defineCustomElement as defineJsonEditor } from "webeditors-vanilla/dist/components/json-editor.js";
import { XmlEditor as XmlEditorElement, defineCustomElement as defineXmlEditor } from "webeditors-vanilla/dist/components/xml-editor.js";

type EditorFooterEvents = NonNullable<unknown>;

export const EditorFooter: StencilReactComponent<EditorFooterElement, EditorFooterEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<EditorFooterElement, EditorFooterEvents>({
        tagName: 'editor-footer',
        elementClass: EditorFooterElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as EditorFooterEvents,
        defineCustomElement: defineEditorFooter
    })
    : /*@__PURE__*/ createSSRComponent<EditorFooterElement, EditorFooterEvents>({
        tagName: 'editor-footer',
        properties: {
            backgroundColor: 'background-color',
            color: 'color'
        },
        hydrateModule: import('webeditors-vanilla/hydrate')
    });

type EditorPanelEvents = NonNullable<unknown>;

export const EditorPanel: StencilReactComponent<EditorPanelElement, EditorPanelEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<EditorPanelElement, EditorPanelEvents>({
        tagName: 'editor-panel',
        elementClass: EditorPanelElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {} as EditorPanelEvents,
        defineCustomElement: defineEditorPanel
    })
    : /*@__PURE__*/ createSSRComponent<EditorPanelElement, EditorPanelEvents>({
        tagName: 'editor-panel',
        properties: {},
        hydrateModule: import('webeditors-vanilla/hydrate')
    });

type JsonEditorEvents = { onEditorChange: EventName<CustomEvent<string>> };

export const JsonEditor: StencilReactComponent<JsonEditorElement, JsonEditorEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<JsonEditorElement, JsonEditorEvents>({
        tagName: 'json-editor',
        elementClass: JsonEditorElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onEditorChange: 'editorChange' } as JsonEditorEvents,
        defineCustomElement: defineJsonEditor
    })
    : /*@__PURE__*/ createSSRComponent<JsonEditorElement, JsonEditorEvents>({
        tagName: 'json-editor',
        properties: {
            value: 'value',
            readonly: 'readonly',
            showActionsPanel: 'show-actions-panel',
            showFooter: 'show-footer',
            theme: 'theme',
            mode: 'mode'
        },
        hydrateModule: import('webeditors-vanilla/hydrate')
    });

type XmlEditorEvents = { onEditorChange: EventName<CustomEvent<string>> };

export const XmlEditor: StencilReactComponent<XmlEditorElement, XmlEditorEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<XmlEditorElement, XmlEditorEvents>({
        tagName: 'xml-editor',
        elementClass: XmlEditorElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onEditorChange: 'editorChange' } as XmlEditorEvents,
        defineCustomElement: defineXmlEditor
    })
    : /*@__PURE__*/ createSSRComponent<XmlEditorElement, XmlEditorEvents>({
        tagName: 'xml-editor',
        properties: {
            value: 'value',
            readonly: 'readonly',
            showActionsPanel: 'show-actions-panel',
            showFooter: 'show-footer',
            theme: 'theme'
        },
        hydrateModule: import('webeditors-vanilla/hydrate')
    });
